// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Entities;
using Microsoft.EntityFrameworkCore;

namespace Repositories;

public partial class PettsStore_DataBaseContext : DbContext
{
    public PettsStore_DataBaseContext() { }
    public PettsStore_DataBaseContext(DbContextOptions<PettsStore_DataBaseContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Category> Categories { get; set; }

    public virtual DbSet<Order> Orders { get; set; }

    public virtual DbSet<OrderItem> OrderItems { get; set; }

    public virtual DbSet<Product> Products { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Category>(entity =>
        {
            entity.Property(e => e.CategoryName).IsFixedLength();
        });

        modelBuilder.Entity<Order>(entity =>
        {
            entity.HasOne(d => d.User).WithMany(p => p.Orders).HasConstraintName("FK__Orders__UserId__403A8C7D");
        });

        modelBuilder.Entity<OrderItem>(entity =>
        {
            entity.HasOne(d => d.Order).WithMany(p => p.OrderItems).HasConstraintName("FK__Order_Ite__Order__412EB0B6");

            entity.HasOne(d => d.Product).WithMany(p => p.OrderItems).HasConstraintName("FK__Order_Ite__Produ__440B1D61");
        });

        modelBuilder.Entity<Product>(entity =>
        {
            entity.Property(e => e.ImageUrl).IsFixedLength();
            entity.Property(e => e.ProductDescription).IsFixedLength();
            entity.Property(e => e.ProductName).IsFixedLength();

            entity.HasOne(d => d.Ctegory).WithMany(p => p.Products).HasConstraintName("FK__Products__Ctegor__3B75D760");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.Property(e => e.Firstname).IsFixedLength();
            entity.Property(e => e.Lastname).IsFixedLength();
            entity.Property(e => e.Password).IsFixedLength();
            entity.Property(e => e.Username).IsFixedLength();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}